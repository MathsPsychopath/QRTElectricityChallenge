{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOaMvKY6cdGbyC2CdjUMQqT"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# QRT Electricity dataset challenge\n",
        "___\n",
        "## Approach\n",
        "Use a neural network and train on provided data `X_train`, comparing results with `Y_train` and using the difference to do backpropagation. We will then use the `X_test` to generate the final results.\n",
        "\n",
        "## Steps\n",
        "1. Import the data and split it into arrays compatible with Keras/TF API\n",
        "2. Define the structure of the neural network\n",
        "3. Choose an activation function, backpropagation technique and pick random weights + biases\n",
        "4. Train the model (however the hell you do that?)\n",
        "\n",
        "## Resources\n",
        "https://keras.io/getting_started/intro_to_keras_for_engineers/\n",
        "\n",
        "\n",
        "https://www.tensorflow.org/learn \n",
        "\n",
        "https://www.tensorflow.org/tutorials/keras/regression"
      ],
      "metadata": {
        "id": "yPl27eox8Idp"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "clZXvNWp75Th"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import os\n",
        "import tensorflow as tf\n",
        "from tensorflow import keras\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        " - import data using pandas\n",
        " "
      ],
      "metadata": {
        "id": "gG5x4hSS_FH3"
      }
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "kpr-p4h5FIhX"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}